{"mappings":"AAIA,MAAMA,EAAyBC,OAAOC,WACpC,gCAGIC,EAAW,KACfC,SAASC,gBAAgBC,aAAa,aAAc,QACpDC,aAAaC,QAAQ,QAAS,SAG1BC,EAAY,KAChBL,SAASC,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,QAAS,UAuBhCE,OAAOC,iBAAiB,UAAWC,IACfA,EAAEC,OAAOC,QACfX,IAAgBM,IAPdL,SAASW,eAAe,SAChCC,UClCR,MAAMC,EAAWb,SAASW,eAAe,uBACnCG,EAAYd,SAASW,eAAe,qBACpCI,EAAgBf,SAASW,eAAe,kBAExCK,GADShB,SAASW,eAAe,OACzBX,SAASW,eAAe,oBAmCtBM,IACdJ,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCa,EAAcG,UAAUC,OAAO,WCtChBnB,SAASW,eAAe,uBACnBX,SAASW,eAAe,kBAE9Cd,OAAOU,iBAAiB,+BFuCtB,MAAMa,EAAgBjB,aAAakB,QAAQ,SACvCD,GAEFpB,SAASC,gBAAgBC,aAAa,aAAckB,GAGlDd,OAAOI,QAFY,QAAjBU,YA/BuBZ,GAC7B,MAAMF,EAASN,SAASW,eAAe,UACnCH,EAAEc,SAEJhB,EAAOI,SAAU,EACjBX,MAGAO,EAAOI,SAAU,EACjBL,KA8BAkB,CAAe3B,MEhDDI,SAASwB,cAAc,sBAC/BjB,iBAAiB,oBDHzBQ,EAAcG,UAAUZ,OAAO,WAEZ,UADAO,EAASY,aAAa,iBAEvCZ,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCc,EAAME,UAAUC,OAAO,cAEvBN,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCc,EAAME,UAAUQ,IAAI,gBCJJ1B,SAAS2B,iBAAiB,eAClCC,SAASC,IACnBA,EAAKtB,iBAAiB,QAASU,iBCd/B,MACMa,GADa,IAAIC,MACQC,eAAe,QAAS,CAAEC,QAAS,SAClDjC,SAASwB,cAAc,uBAC/BU,YAAW,SAAYJ,KDcjCK","sources":["src/app/colorTheme.js","src/app/navbar.js","src/app/contact.js","src/app/weekday.js"],"sourcesContent":["// if (window.matchMedia(\"(prefers-color-scheme)\").media !== \"not all\") {\n//   console.log(\"ðŸŽ‰ Dark mode is supported\");\n// }\n\nconst checkSystemPreferences = window.matchMedia(\n  \"(prefers-color-scheme: dark)\"\n);\n\nconst setDarkMode = () => {\n  document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  localStorage.setItem(\"theme\", \"dark\");\n};\n\nconst setLightMode = () => {\n  document.documentElement.setAttribute(\"data-theme\", \"light\");\n  localStorage.setItem(\"theme\", \"light\");\n};\n\n// checks system preferences and activates correct checkbox;\nexport function setColorScheme(e) {\n  const toggle = document.getElementById(\"toggle\");\n  if (e.matches) {\n    // Dark\n    toggle.checked = true;\n    setDarkMode();\n  } else {\n    // Light\n    toggle.checked = false;\n    setLightMode();\n  }\n}\n\nfunction playAudio() {\n  const audio = document.getElementById(\"audio\");\n  audio.play();\n}\n\n// toggles theme based on user changes\ntoggle.addEventListener(\"change\", (e) => {\n  const isChecked = e.target.checked;\n  isChecked ? setDarkMode() : setLightMode();\n  playAudio();\n});\n\n// check if there is a theme already  in local storage\nexport function checkAndSetTheme() {\n  const existingTheme = localStorage.getItem(\"theme\");\n  if (existingTheme) {\n    // if there is an existing theme, then set it\n    document.documentElement.setAttribute(\"data-theme\", existingTheme);\n    if (existingTheme == \"dark\") {\n      // if that existing theme is dark, check the box\n      toggle.checked = true;\n    } else {\n      toggle.checked = false;\n    }\n  } else {\n    // if there is no exsiting theme, then set it with system preferences\n    setColorScheme(checkSystemPreferences);\n  }\n}\n","const navLinks = document.getElementById(\"nav-links-container\");\nconst navToggle = document.getElementById(\"mobile-nav-toggle\");\nconst hamburgerMenu = document.getElementById(\"hamburger-menu\");\nconst navbar = document.getElementById(\"nav\");\nconst btnUp = document.getElementById(\"btn-up\");\n\n// MOBILE NAV TOGGLE\nexport function activateMobileMenu() {\n  hamburgerMenu.classList.toggle(\"animate\");\n  const visibility = navLinks.getAttribute(\"data-visible\");\n  if (visibility === \"false\") {\n    navLinks.setAttribute(\"data-visible\", true);\n    navToggle.setAttribute(\"aria-expanded\", true);\n    btnUp.classList.remove(\"show-btn\");\n  } else {\n    navLinks.setAttribute(\"data-visible\", false);\n    navToggle.setAttribute(\"aria-expanded\", false);\n    btnUp.classList.add(\"show-btn\");\n  }\n}\n\n// set fixed navbar on scroll\nexport function setFixedNav() {\n  const scrollHeight = window.pageYOffset;\n  const navHeight = navbar.getBoundingClientRect().height;\n  if (scrollHeight > navHeight) {\n    navbar.classList.add(\"fixed-nav\");\n  } else {\n    navbar.classList.remove(\"fixed-nav\");\n  }\n\n  // show the back to top button when scrolling past a certain point\n  if (scrollHeight > 600) {\n    btnUp.classList.add(\"show-btn\");\n  } else {\n    btnUp.classList.remove(\"show-btn\");\n  }\n}\n\nexport function closeMobileNav() {\n  navLinks.setAttribute(\"data-visible\", false);\n  navToggle.setAttribute(\"aria-expanded\", false);\n  hamburgerMenu.classList.remove(\"animate\");\n}\n","import { checkAndSetTheme } from \"./colorTheme\";\nimport { activateMobileMenu, closeMobileNav } from \"./navbar\";\nimport { getWeekDay } from \"./weekday\";\n\nconst navLinks = document.getElementById(\"nav-links-container\");\nconst hamburgerMenu = document.getElementById(\"hamburger-menu\");\n\nwindow.addEventListener(\"DOMContentLoaded\", checkAndSetTheme);\n\n// MOBILE MENU TOGGLE\nconst navToggle = document.querySelector(\".mobile-nav-toggle\");\nnavToggle.addEventListener(\"click\", activateMobileMenu);\n\nconst scrollLinks = document.querySelectorAll(\"[data-link]\");\nscrollLinks.forEach((link) => {\n  link.addEventListener(\"click\", closeMobileNav);\n});\n\ngetWeekDay();\n","export function getWeekDay() {\n  const weekdayNum = new Date();\n  const weekdayName = weekdayNum.toLocaleString(\"en-US\", { weekday: \"long\" });\n  const weekday = document.querySelector(\"[data-date=weekday]\");\n  weekday.textContent = `Happy ${weekdayName}!`;\n}\n"],"names":["$b86d2d1af449edd0$var$checkSystemPreferences","window","matchMedia","$b86d2d1af449edd0$var$setDarkMode","document","documentElement","setAttribute","localStorage","setItem","$b86d2d1af449edd0$var$setLightMode","toggle","addEventListener","e","target","checked","getElementById","play","$9fff91475c00333f$var$navLinks","$9fff91475c00333f$var$navToggle","$9fff91475c00333f$var$hamburgerMenu","$9fff91475c00333f$var$btnUp","$9fff91475c00333f$export$5f78d73373efa618","classList","remove","existingTheme","getItem","matches","$b86d2d1af449edd0$export$f2d00fe8ce80fd84","querySelector","getAttribute","add","querySelectorAll","forEach","link","weekdayName","Date","toLocaleString","weekday","textContent","$9ef05ad736023260$export$223eaf1be963543c"],"version":3,"file":"contact.5160980b.js.map"}