{"mappings":"AAIA,MAAMA,EAAyBC,OAAOC,WACpC,gCAGIC,EAAW,KACfC,SAASC,gBAAgBC,aAAa,aAAc,QACpDC,aAAaC,QAAQ,QAAS,SAG1BC,EAAY,KAChBL,SAASC,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,QAAS,UAuBhCE,OAAOC,iBAAiB,UAAWC,IACfA,EAAEC,OAAOC,QACfX,IAAgBM,IAPdL,SAASW,eAAe,SAChCC,UClCR,MAAMC,EAAWb,SAASW,eAAe,uBACnCG,EAAYd,SAASW,eAAe,qBACpCI,EAAgBf,SAASW,eAAe,kBACxCK,EAAShB,SAASW,eAAe,OACjCM,EAAQjB,SAASW,eAAe,mBAmCtBO,IACdL,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCa,EAAcI,UAAUC,OAAO,uBCzC/B,MACMC,GADa,IAAIC,MACQC,eAAe,QAAS,CAAEC,QAAS,SAClDxB,SAASyB,cAAc,uBAC/BC,YAAW,SAAYL,KCCjCM,GAEA9B,OAAOU,iBAAiB,+BHuCtB,MAAMqB,EAAgBzB,aAAa0B,QAAQ,SACvCD,GAEF5B,SAASC,gBAAgBC,aAAa,aAAc0B,GAGlDtB,OAAOI,QAFY,QAAjBkB,YA/BuBpB,GAC7B,MAAMF,EAASN,SAASW,eAAe,UACnCH,EAAEsB,SAEJxB,EAAOI,SAAU,EACjBX,MAGAO,EAAOI,SAAU,EACjBL,KA8BA0B,CAAenC,MGhDnBC,OAAOU,iBAAiB,qBFatB,MAAMyB,EAAenC,OAAOoC,YAExBD,EADchB,EAAOkB,wBAAwBC,OAE/CnB,EAAOG,UAAUiB,IAAI,aAErBpB,EAAOG,UAAUC,OAAO,aAItBY,EAAe,IACjBf,EAAME,UAAUiB,IAAI,YAEpBnB,EAAME,UAAUC,OAAO,eEtBTpB,SAASyB,cAAc,sBAC/BlB,iBAAiB,oBFNzBQ,EAAcI,UAAUb,OAAO,WAEZ,UADAO,EAASwB,aAAa,iBAEvCxB,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCe,EAAME,UAAUC,OAAO,cAEvBP,EAASX,aAAa,gBAAgB,GACtCY,EAAUZ,aAAa,iBAAiB,GACxCe,EAAME,UAAUiB,IAAI,gBEAJpC,SAASsC,iBAAiB,eAClCC,SAASC,IACnBA,EAAKjC,iBAAiB,QAASW,MAIlBlB,SAASW,eAAe,SAChCJ,iBAAiB,mBCVOC,aAdPiC,GACtB,MAAMC,EAAS1C,SAASsC,iBAAiB,UAEzC,IAAK,IAAIK,KAASD,EACZC,EAAMxB,UAAUyB,SAAS,WAE3BD,EAAMxB,UAAUC,OAAO,UAGVsB,EAAOG,KAAKJ,GAClBtB,UAAUiB,IAAI,UAMzBU,CADiBC,WAAWvC,EAAEC,OAAOuC","sources":["src/app/colorTheme.js","src/app/navbar.js","src/app/weekday.js","src/app/app.js","src/app/slider.js"],"sourcesContent":["// if (window.matchMedia(\"(prefers-color-scheme)\").media !== \"not all\") {\n//   console.log(\"ðŸŽ‰ Dark mode is supported\");\n// }\n\nconst checkSystemPreferences = window.matchMedia(\n  \"(prefers-color-scheme: dark)\"\n);\n\nconst setDarkMode = () => {\n  document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  localStorage.setItem(\"theme\", \"dark\");\n};\n\nconst setLightMode = () => {\n  document.documentElement.setAttribute(\"data-theme\", \"light\");\n  localStorage.setItem(\"theme\", \"light\");\n};\n\n// checks system preferences and activates correct checkbox;\nexport function setColorScheme(e) {\n  const toggle = document.getElementById(\"toggle\");\n  if (e.matches) {\n    // Dark\n    toggle.checked = true;\n    setDarkMode();\n  } else {\n    // Light\n    toggle.checked = false;\n    setLightMode();\n  }\n}\n\nfunction playAudio() {\n  const audio = document.getElementById(\"audio\");\n  audio.play();\n}\n\n// toggles theme based on user changes\ntoggle.addEventListener(\"change\", (e) => {\n  const isChecked = e.target.checked;\n  isChecked ? setDarkMode() : setLightMode();\n  playAudio();\n});\n\n// check if there is a theme already  in local storage\nexport function checkAndSetTheme() {\n  const existingTheme = localStorage.getItem(\"theme\");\n  if (existingTheme) {\n    // if there is an existing theme, then set it\n    document.documentElement.setAttribute(\"data-theme\", existingTheme);\n    if (existingTheme == \"dark\") {\n      // if that existing theme is dark, check the box\n      toggle.checked = true;\n    } else {\n      toggle.checked = false;\n    }\n  } else {\n    // if there is no exsiting theme, then set it with system preferences\n    setColorScheme(checkSystemPreferences);\n  }\n}\n","const navLinks = document.getElementById(\"nav-links-container\");\nconst navToggle = document.getElementById(\"mobile-nav-toggle\");\nconst hamburgerMenu = document.getElementById(\"hamburger-menu\");\nconst navbar = document.getElementById(\"nav\");\nconst btnUp = document.getElementById(\"btn-up\");\n\n// MOBILE NAV TOGGLE\nexport function activateMobileMenu() {\n  hamburgerMenu.classList.toggle(\"animate\");\n  const visibility = navLinks.getAttribute(\"data-visible\");\n  if (visibility === \"false\") {\n    navLinks.setAttribute(\"data-visible\", true);\n    navToggle.setAttribute(\"aria-expanded\", true);\n    btnUp.classList.remove(\"show-btn\");\n  } else {\n    navLinks.setAttribute(\"data-visible\", false);\n    navToggle.setAttribute(\"aria-expanded\", false);\n    btnUp.classList.add(\"show-btn\");\n  }\n}\n\n// set fixed navbar on scroll\nexport function setFixedNav() {\n  const scrollHeight = window.pageYOffset;\n  const navHeight = navbar.getBoundingClientRect().height;\n  if (scrollHeight > navHeight) {\n    navbar.classList.add(\"fixed-nav\");\n  } else {\n    navbar.classList.remove(\"fixed-nav\");\n  }\n\n  // show the back to top button when scrolling past a certain point\n  if (scrollHeight > 600) {\n    btnUp.classList.add(\"show-btn\");\n  } else {\n    btnUp.classList.remove(\"show-btn\");\n  }\n}\n\nexport function closeMobileNav() {\n  navLinks.setAttribute(\"data-visible\", false);\n  navToggle.setAttribute(\"aria-expanded\", false);\n  hamburgerMenu.classList.remove(\"animate\");\n}\n","export function getWeekDay() {\n  const weekdayNum = new Date();\n  const weekdayName = weekdayNum.toLocaleString(\"en-US\", { weekday: \"long\" });\n  const weekday = document.querySelector(\"[data-date=weekday]\");\n  weekday.textContent = `Happy ${weekdayName}!`;\n}\n","import { checkAndSetTheme } from \"./colorTheme\";\nimport { setFixedNav, activateMobileMenu, closeMobileNav } from \"./navbar\";\nimport { getSliderRange } from \"./slider\";\nimport { getWeekDay } from \"./weekday\";\n\ngetWeekDay();\n// COLOR THEME LOGIC\nwindow.addEventListener(\"DOMContentLoaded\", checkAndSetTheme);\n\n// SET FIXED NAVBAR\nwindow.addEventListener(\"scroll\", setFixedNav);\n\n// MOBILE MENU TOGGLE\nconst navToggle = document.querySelector(\".mobile-nav-toggle\");\nnavToggle.addEventListener(\"click\", activateMobileMenu);\n\n// CLOSE MOBILE NAV WHEN LINK IS CLICKED\nconst scrollLinks = document.querySelectorAll(\"[data-link]\");\nscrollLinks.forEach((link) => {\n  link.addEventListener(\"click\", closeMobileNav);\n});\n\n// testimonials slides\nconst slider = document.getElementById(\"range\");\nslider.addEventListener(\"change\", getSliderRange);\n","function getActiveSlide(slideValue) {\n  const slides = document.querySelectorAll(\".slide\");\n  //   loop through EVERY slide and check if there's already an active slide\n  for (let slide of slides) {\n    if (slide.classList.contains(\"active\")) {\n      //   if there is, remove the active class\n      slide.classList.remove(\"active\");\n    }\n    //   then asign the new slide value\n    let newSlide = slides.item(slideValue);\n    newSlide.classList.add(\"active\");\n  }\n}\n\nexport function getSliderRange(e) {\n  let slideValue = parseFloat(e.target.value);\n  getActiveSlide(slideValue);\n}\n"],"names":["$b86d2d1af449edd0$var$checkSystemPreferences","window","matchMedia","$b86d2d1af449edd0$var$setDarkMode","document","documentElement","setAttribute","localStorage","setItem","$b86d2d1af449edd0$var$setLightMode","toggle","addEventListener","e","target","checked","getElementById","play","$9fff91475c00333f$var$navLinks","$9fff91475c00333f$var$navToggle","$9fff91475c00333f$var$hamburgerMenu","$9fff91475c00333f$var$navbar","$9fff91475c00333f$var$btnUp","$9fff91475c00333f$export$5f78d73373efa618","classList","remove","weekdayName","Date","toLocaleString","weekday","querySelector","textContent","$9ef05ad736023260$export$223eaf1be963543c","existingTheme","getItem","matches","$b86d2d1af449edd0$export$f2d00fe8ce80fd84","scrollHeight","pageYOffset","getBoundingClientRect","height","add","getAttribute","querySelectorAll","forEach","link","slideValue","slides","slide","contains","item","$e05bda5cfc67fd03$var$getActiveSlide","parseFloat","value"],"version":3,"file":"index.9a0773e2.js.map"}